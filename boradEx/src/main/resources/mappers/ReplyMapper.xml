<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.co.ex.mapper.ReplyMapper">

<sql id="limit">
	limit #{cri.pageStart}, #{cri.perPageNum} 
</sql> 

<insert id="create" useGeneratedKeys="true" 
  	keyColumn="rno" parameterType="kr.co.ex.domain.ReplyVO"
  	keyProperty="kr.co.ex.domain.ReplyVO.rno">
  	insert into tbl_reply(bno, reply, replyer, secret, password, par_rno) 
  	values (#{bno}, #{reply}, #{replyer}, #{secret}, #{password}, #{parRno})
</insert>
  
  <select id="list" resultType="kr.co.ex.domain.ReplyVO">
  	select rno, reply, replyer, regdate, par_rno, seq, secret, delete_type 
  	from tbl_reply 
  	where bno=#{bno}
  </select>
  
  <select id="listCriteria" resultType="kr.co.ex.dto.ReplyDto">
  	select rno, reply, replyer, regdate, par_rno, seq, secret, delete_type 
  	from tbl_reply 
  	where bno=#{bno} and isnull(par_rno)
  	order by rno desc
  	<include refid="limit" />
  </select>
  
  <select id="listCriteriaAdded" resultType="kr.co.ex.dto.ReplyDto">
	select rno, reply, replyer, regdate, par_rno, seq, secret, delete_type from tbl_reply
	where par_rno=#{parRno}
	order by rno
	<include refid="limit" />
  </select>
  
  <select id="listReplyByReplyer" resultType="kr.co.ex.domain.ReplyVO">
  	select rno, reply, replyer, regdate, par_rno, seq, secret, delete_type 
  	from tbl_reply where replyer=#{replyer} and isnull(delete_type)
  	<include refid="limit" />
  </select>
  
   <select id="listReplyByReportCnt" resultType="kr.co.ex.domain.ReplyVO">
  	select rno, reply, replyer, regdate, par_rno, seq, secret, delete_type 
  	from tbl_reply 
  	where isnull(delete_type)
  	order by report_cnt desc
  	<include refid="limit" />
  </select>
  
  <select id="readPassword" resultType="String">
  	select password from tbl_reply where rno = #{rno}
  </select>
  
  <select id="readTotalCnt" resultType="int">
  	select count(rno) from tbl_reply 
  	where bno=#{bno}
  	<if test="notIncludeAdded">
  		and par_rno is null
  	</if>
  	
  </select>
  
  <select id="readAddedTotalCnt" resultType="int">
  	select count(par_rno) 
  	from tbl_reply 
  	where par_rno=#{parRno}
  </select>
  
  <select id="readTotalCntByReplyer" resultType="int">
  	select count(rno) 
  	from tbl_reply 
  	where replyer=#{username} and isnull(delete_type)
  </select>
  
  <select id="get" resultType="kr.co.ex.domain.ReplyVO">
   	select * from tbl_reply where rno=#{rno}
  </select>
  
  <select id="readReplyer" resultType="String">
  	select replyer from tbl_reply where par_rno=#{parRno}
  </select>
  
  <update id="update">
  	update tbl_reply set reply=#{reply}, updatedate=now()
  	where rno=#{rno}
  </update>
  
  <update id="delete">
  	update tbl_reply set delete_type=#{deleteType}, reply="" where rno=#{rno};
  </update>
  
  <update id="deleteByReplyer">
  	update tbl_reply set delete_type="L", reply="" where replyer=#{username};
  </update>
  
  <update id="deleteReplies">
  	<foreach collection="rno" item="r">
  		update tbl_reply set delete_type=#{deleteType} where rno=#{r};
  	</foreach>
  </update>
  
  <update id="updateReport">
  	update tbl_reply set report_cnt = report_cnt+1 where rno=#{rno}
  </update>
</mapper>