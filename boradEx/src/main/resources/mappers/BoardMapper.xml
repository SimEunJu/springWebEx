<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.ex.mapper.BoardMapper">

<sql id="noticeBoundary">
	and bno>100
</sql>

<insert id="create">
	insert into tbl_board (title, content, writer
	<if test="password != null">
		, password
	</if>
	) values (#{title}, #{content}, #{writer}
	<if test="password != null">
		, #{password}
	</if>
	)
</insert>

<insert id="createNotice">
	insert into tbl_board (bno, title, content, writer, delete_type) 
	values (#{bno}, #{title}, #{content}, #{writer}, null)
</insert>

<select id="read" resultType="kr.co.ex.domain.BoardVO">
	select * from tbl_board where bno=#{bno}
</select>

<select id="readWriterName" resultType="java.lang.String">
	select writer from tbl_board where bno=#{bno}
</select>

<select id="listBoardByWriter" resultType="kr.co.ex.domain.BoardVO">
	select * from tbl_board where writer=#{writer} and isnull(delete_type)
	limit #{cri.pageStart}, #{cri.perPageNum}
</select>

<select id="readPassword" resultType="String">
	select password from tbl_board where bno=#{bno}
</select>

<update id="update">
	update tbl_board set title=#{title}, content=#{content}, writer=#{writer}
	where bno=#{bno}
</update>

<update id="updateLike">
	update tbl_board set user_like = user_like+#{diff} where bno=#{bno}
</update>

<update id="delete">
	update tbl_board set delete_type=#{deleteType} where bno=#{bno} 
</update>


<update id="deleteByWriter">
	update tbl_board set delete_type="B" where writer=#{username} 
</update>

<select id="listAll" resultType="kr.co.ex.domain.BoardVO">
	select * from tbl_board where isnull(delete_type)
	order regdate desc
</select>

<sql id="category">
	<trim prefix="and">
	<choose>
		<when test='type.typeInitial.equals("all")'>
			
		</when>
		 <when test='type.typeInitial.equals("hot")'>
			<![CDATA[
			viewcnt > 50
			]]>
		</when>
		<when test='type.typeInitial.equals("notice")'>
			category=1
		</when>
	</choose>
	</trim>
</sql>

<select id="listCriteria" resultType="kr.co.ex.domain.BoardVO">
	select * from tbl_board where isnull(delete_type)
	<trim prefix="where" prefixOverrides="and">
		<include refid="category" />
	</trim>
	order by bno desc 
	<if test='type.typeInitial.equals("report")'>
		, report_cnt desc
	</if>
	limit #{pageStart}, #{perPageNum}
</select>

<select id="listRegdate" resultType="kr.co.ex.domain.BoardVO">
 	<![CDATA[
 		select * from tbl_board
 		where regdate >= #{regdate} and isnull(delete_type)
 		order by viewcnt desc
 		limit 0, 10 
	 ]]>
</select>

<select id="totalCount" resultType="int">
	select count(bno) from tbl_board 
	<trim prefix="where" prefixOverrides="and">
		<include refid="category" />
		and isnull(delete_type)
	</trim>
	
</select>

<select id="readTotalCntByWriter" resultType="int">
	select count(bno) from tbl_board where writer=#{username} and isnull(delete_type)
</select>

<sql id="search">
	<if test="typeArr != null">
	<trim prefix="and (" suffix=") " prefixOverrides="or">
		<foreach item="type" collection="typeArr">
			<trim prefix="or">
				<bind name="searchWord" value="'%' + keyword + '%'" />
				<choose>
					<when test="searchType == 't'.toString()">
						title like #{searchWord}
					</when>
					<when test="searchType == 'c'.toString()">
						content like #{searchWord}
					</when>
					<when test="searchType == 'w'.toString()">
						writer like #{searchWord}
					</when>
				</choose>
			</trim>
		</foreach>
	</trim>
	</if>
</sql>

<select id="listSearch" resultType="kr.co.ex.domain.BoardVO">
	select * from tbl_board 
	<trim prefix="where" prefixOverrides="and">
		<include refid="category" />
		<include refid="search" />
		and isnull(delete_type)
	</trim>
 	order by bno desc
 	<if test='type.typeInitial.equals("report")'>
		, report_cnt desc
	</if>
 	limit #{pageStart}, #{perPageNum}
</select>	

<select id="listNotice" resultType="kr.co.ex.domain.BoardVO">
	select * from tbl_board
	<![CDATA[
	where bno >= #{noticeStartIdx} and bno < #{noticeEndIdx} and category=#{type.typeNumber} and isNull(delete_type)
	]]>
	limit #{pageStart}, #{perPageNum}
</select>

<select id="searchCount" resultType="int">
	select count(bno) from tbl_board
	<trim prefix="where" prefixOverrides="and">
		<include refid="category" />
		<include refid="search" />
		and isnull(delete_type)
	</trim>
</select>

<insert id="addAttach">
	insert into tbl_attach(bno, file_name, upload_path, uuid, file_type) 
	values(LAST_INSERT_ID(), #{fileName}, #{uploadPath}, #{uuid}, #{fileType})
</insert>

<select id="getAttach" resultType="kr.co.ex.domain.AttachVO">
	select * from tbl_attach where bno=#{bno}
</select>

<delete id="deleteAttach">
	delete from tbl_attach where uuid=#{uuid}
</delete>

<delete id="deleteAllAttach">
	delete from tbl_attach where bno=#{bno}
</delete>

<update id="replaceAttach">
	insert into tbl_attach(bno, file_name, upload_path, uuid, file_type) 
	values(LAST_INSERT_ID(), #{fileName}, #{uploadPath}, #{uuid}, #{fileType})
</update>

<select id="readReplyCnt" resultType="int">
	select count(rno) from tbl_reply where bno=#{bno}
</select>

<update id="updateViewCnt">
	update tbl_board set viewcnt = viewcnt+1 where bno=#{bno}
</update>

<update id="updateReportCnt">
	update tbl_board set report_cnt = report_cnt + #{diff} where bno=#{bno}
</update>

</mapper>