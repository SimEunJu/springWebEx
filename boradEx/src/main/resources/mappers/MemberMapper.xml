<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.ex.mapper.MemberMapper">
	
	<resultMap id="member" type="kr.co.ex.domain.MemberVO">
		<id property="username" column="username" />
		<result property="userpw" column="userpw" />
		<result property="state" column="state" />
		<result property="reportCnt" column="reportcnt" />
		<result property="regdate" column="regdate" />
		<result property="updatedate" column="updatedate" />
		<collection property="authList" ofType="kr.co.ex.domain.AuthVO">
			<id property="auth" column="auth" />
			<result property="username" column="username" />
		</collection>
	</resultMap>
	
	<select id="read" resultMap="member">
		select tbl_member.username, userpw, regdate, updatedate, state, report_cnt, auth
		from tbl_member left outer join tbl_member_auth on tbl_member.username = tbl_member_auth.username
		where #{username} = tbl_member.username
	</select>
	
	<select id="readAuth" resultType="kr.co.ex.domain.AuthVO">
		select username, auth from tbl_member_auth where username=#{username}
	</select>
	
	<insert id="createUser">
		insert into tbl_member(username, userpw, username) 
		values(#{username}, #{password}, #{username})	
	</insert>
	
	<insert id="createAuth">
		insert into tbl_member_auth(username, auth)
		values(#{username}, #{auth})
	</insert>
	
	<select id="listMember" resultType="kr.co.ex.domain.MemberVO">
		select * from tbl_member limit #{pageStart}, #{perPageNum}
	</select>
	
	<select id="listReportMember" resultType="kr.co.ex.domain.MemberVO">
		select * from tbl_member order by report_cnt desc limit #{pageStart}, #{perPageNum}
	</select>
	
	<select id="listStateMember" resultType="kr.co.ex.domain.MemberVO">
		select * from tbl_member
		where state=#{state} limit #{cri.pageStart}, #{cri.perPageNum}
	</select>

	<select id="readMemberCnt" resultType="int">
		select count(*) from tbl_member;
	</select>
	
	<update id="updateState">
		<foreach collection="members" item="name">
			update tbl_member set state=#{state} where username=#{name};
		</foreach>
		<if test="state.equals('B')">
			<foreach collection="members" item="name">	
				update tbl_member_auth set auth="ROLE_BANNED" where username=#{name};
			</foreach>
		</if>
	</update>
	
	<update id="updateLeave">
		<![CDATA[
		update tbl_member set state="L", leave_date=now() 
		]]>
		where username=#{username}
	</update>
	
	<update id="updateReportCnt">
		update tbl_member set report_cnt = report_cnt + #{diff} where username=#{username}
	</update>

	<select id="listMemberByKeyword" resultType="kr.co.ex.domain.MemberVO">
		<bind name="searchWord" value="'%' + keyword + '%'" />
		select * from tbl_member where username like #{searchWord}
	</select>
	
	<select id="updateAccessTimeProcedure" statementType="CALLABLE">
		call update_access_time(#{epochSecond})
	</select> 
	
	<insert id="updateStateForLogin">
		insert into tbl_member(username) values (#{username})
		on duplicate key update state=if(state="L", "A", state); 
		<selectKey resultType="int" order="AFTER">
			SELECT ROW_COUNT();
		</selectKey>
	</insert>
	
	<select id="updateRoleForLogin">
		insert into tbl_member_auth(username) values (#{username})
		on duplicate key update auth=if(auth!='ROLE_USER', auth, 'ROLE_USER');
	</select>
</mapper>